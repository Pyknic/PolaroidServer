package com.company.speedment.orm.test.polaroid.db0.polaroid.image;

import com.company.speedment.orm.test.polaroid.db0.polaroid.user.User;
import com.company.speedment.orm.test.polaroid.db0.polaroid.user.UserManager;
import java.sql.Timestamp;
import java.util.Objects;
import java.util.Optional;
import java.util.stream.Stream;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the Table 'polaroid.db0.polaroid.image'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment.
 * Any changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment 
 */
@Generated("Speedment")
public interface Image {
    
    Long getId();
    
    Long getUploader();
    
    String getTitle();
    
    String getDescription();
    
    String getImgData();
    
    Timestamp getUploaded();
    
    default User findUploader() {
        return UserManager.get()
                .stream().filter(user -> Objects.equals(this.getUploader(), user.getId())).findAny().get();
    }
    
    static ImageBuilder builder() {
        return ImageManager.get().builder();
    }
    
    default ImageBuilder toBuilder() {
        return ImageManager.get().toBuilder(this);
    }
    
    static Stream<Image> stream() {
        return ImageManager.get().stream();
    }
    
    default Optional<Image> persist() {
        return ImageManager.get().persist(this);
    }
    
    default Optional<Image> update() {
        return ImageManager.get().update(this);
    }
    
    default Optional<Image> remove() {
        return ImageManager.get().remove(this);
    }
}